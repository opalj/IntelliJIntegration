plugins {
    id 'java'
    id 'scala' // maybe helping
    // check allways for updates https://github.com/JetBrains/gradle-intellij-plugin/releases
    id 'org.jetbrains.intellij' version '0.4.8'
    id 'checkstyle'
    id 'pmd'
    id "com.github.spotbugs" version "1.6.6"
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'com.github.johnrengelman.shadow'  version '4.0.3'
}

shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
}
group 'Kollektiv 23'
version '1.0.5'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
//    ivy{
//        url "${System.properties['user.home']}/.ivy2/local"
//        layout 'pattern',{
//            artifact  "[organisation]/[module]/[revision]/jars/[artifact].[ext]"
//            ivy  "[organisation]/[module]/[revision]/ivys/ivy.xml"
//        }
//    }
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url = 'http://maven.teamdev.com/repository/products' }
    maven { url = 'http://perfectjpattern.sourceforge.net/m2repo'}
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    //https://mvnrepository.com/artifact/de.opal-project/
    //compile group: 'de.opal-project', name: 'abstract-interpretation-framework_2.12', version: '3.0.0-SNAPSHOT'
    compile group: 'de.opal-project', name:'bytecode-disassembler_2.12', version: '3.0.0-SNAPSHOT'
    compile group: 'de.opal-project', name: 'bytecode-representation_2.12', version: '3.0.0-SNAPSHOT'
    compile group: 'de.opal-project', name: 'three-address-code_2.12', version: '3.0.0-SNAPSHOT'
    compile group: 'de.opal-project', name: 'common_2.12', version: '3.0.0-SNAPSHOT'
}
//https://github.com/JetBrains/gradle-intellij-plugin#configuration
intellij {
    version = 'IC-2019.1.3' // IC Community Edition
    updateSinceUntilBuild false //Disables updating since-build attribute in plugin.xml
    plugins = ['org.intellij.scala:2019.1.8' , 'PsiViewer:191.4212'] // load the the scala-plugin
    pluginName = 'bytecode disassembler'
}
patchPluginXml {
    changeNotes """
      First non beta Version. Ready to enjoy. See Readme or Source Code for further information."""
}

// ================
// Overriding tasks
// ================

// build.dependsOn(check), which means that 'check' will be executed whenever 'build' will be executed
check {
    // googleJavaFormat will report "NO-SOURCE" if everything is properly formatted (-> not harmful in any way, can ignore)
    dependsOn 'googleJavaFormat'
    // dependsOn [checkstyle, pmd and spotbugsMain] per default

    tasks.findByName('checkstyleMain').mustRunAfter('googleJavaFormat')
    tasks.findByName('pmdMain').mustRunAfter('checkstyleMain')
    tasks.findByName('spotbugsMain').mustRunAfter('pmdMain')
}


tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
    ignoreFailures = true
}
tasks.withType(Pmd){
    reports{
        xml.enabled=false
        html.enabled=true
    }
}

checkstyle {
    toolVersion "8.10.1"
    config = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml')
//    maxErrors 20
}
pmd{
    toolVersion = "6.11.0"
    ignoreFailures = true
    ruleSetFiles = files("config/pmd/myRuleSets.xml")

}
runIde {
    maxHeapSize = "4g"
}
