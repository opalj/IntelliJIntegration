// This is a generated file. Not intended for manual editing.
package org.opalj.intellijintegration.JavaByteCodeLanguage.autoGenerated.psi.impl;

import static org.opalj.intellijintegration.JavaByteCodeLanguage.autoGenerated.psi.JavaByteCodeTypes.*;

import com.intellij.extapi.psi.ASTWrapperPsiElement;
import com.intellij.lang.ASTNode;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiElementVisitor;
import org.jetbrains.annotations.*;
import org.opalj.intellijintegration.JavaByteCodeLanguage.autoGenerated.psi.*;

public class JavaByteCodeTableAreaImpl extends ASTWrapperPsiElement
    implements JavaByteCodeTableArea {

  public JavaByteCodeTableAreaImpl(@NotNull ASTNode node) {
    super(node);
  }

  public void accept(@NotNull JavaByteCodeVisitor visitor) {
    visitor.visitTableArea(this);
  }

  public void accept(@NotNull PsiElementVisitor visitor) {
    if (visitor instanceof JavaByteCodeVisitor) accept((JavaByteCodeVisitor) visitor);
    else super.accept(visitor);
  }

  @Override
  @Nullable
  public JavaByteCodeExceptionTableDeclaration getExceptionTableDeclaration() {
    return findChildByClass(JavaByteCodeExceptionTableDeclaration.class);
  }

  @Override
  @Nullable
  public JavaByteCodeLocVarTableDeclaration getLocVarTableDeclaration() {
    return findChildByClass(JavaByteCodeLocVarTableDeclaration.class);
  }

  @Override
  @Nullable
  public JavaByteCodeLocVarTypeTableDeclaration getLocVarTypeTableDeclaration() {
    return findChildByClass(JavaByteCodeLocVarTypeTableDeclaration.class);
  }

  @Override
  @Nullable
  public JavaByteCodeStackMapTableDeclaration getStackMapTableDeclaration() {
    return findChildByClass(JavaByteCodeStackMapTableDeclaration.class);
  }

  @Override
  @NotNull
  public PsiElement getLbracket() {
    return findNotNullChildByType(LBRACKET);
  }

  @Override
  @NotNull
  public PsiElement getRbracket() {
    return findNotNullChildByType(RBRACKET);
  }
}
