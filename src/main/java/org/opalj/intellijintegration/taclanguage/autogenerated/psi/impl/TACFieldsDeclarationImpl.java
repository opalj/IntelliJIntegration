// This is a generated file. Not intended for manual editing.
package org.opalj.intellijintegration.taclanguage.autogenerated.psi.impl;

import com.intellij.lang.ASTNode;
import com.intellij.navigation.ItemPresentation;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiElementVisitor;
import org.jetbrains.annotations.*;
import org.opalj.intellijintegration.taclanguage.autogenerated.psi.*;
import org.opalj.intellijintegration.taclanguage.psi.impl.TACNamedElementImpl;
import org.opalj.intellijintegration.taclanguage.psi.impl.TAC_parserParserUtil;

public class TACFieldsDeclarationImpl extends TACNamedElementImpl implements TACFieldsDeclaration {

  public TACFieldsDeclarationImpl(@NotNull ASTNode node) {
    super(node);
  }

  public void accept(@NotNull TACVisitor visitor) {
    visitor.visitFieldsDeclaration(this);
  }

  public void accept(@NotNull PsiElementVisitor visitor) {
    if (visitor instanceof TACVisitor) accept((TACVisitor) visitor);
    else super.accept(visitor);
  }

  @Override
  @NotNull
  public TACDefMethodName getDefMethodName() {
    return findNotNullChildByClass(TACDefMethodName.class);
  }

  @Override
  @Nullable
  public TACModifierV getModifierV() {
    return findChildByClass(TACModifierV.class);
  }

  @Override
  @NotNull
  public TACType getType() {
    return findNotNullChildByClass(TACType.class);
  }

  @Override
  public String getName() {
    return TAC_parserParserUtil.getName(this);
  }

  @Override
  public PsiElement getNameIdentifier() {
    return TAC_parserParserUtil.getNameIdentifier(this);
  }

  @Override
  public ItemPresentation getPresentation() {
    return TAC_parserParserUtil.getPresentation(this);
  }

  @Override
  public void navigate(boolean requestFocus) {
    TAC_parserParserUtil.navigate(this, requestFocus);
  }
}
