// This is a generated file. Not intended for manual editing.
package org.opalj.intellijintegration.taclanguage.autogenerated.psi.impl;

import static org.opalj.intellijintegration.taclanguage.autogenerated.psi.TAC_elementTypeHolder.*;

import com.intellij.lang.ASTNode;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiElementVisitor;
import com.intellij.psi.PsiReference;
import org.jetbrains.annotations.*;
import org.opalj.intellijintegration.taclanguage.autogenerated.psi.TACDefMethodName;
import org.opalj.intellijintegration.taclanguage.autogenerated.psi.TACVisitor;
import org.opalj.intellijintegration.taclanguage.psi.impl.TACNamedElementImpl;
import org.opalj.intellijintegration.taclanguage.psi.impl.TAC_parserParserUtil;

public class TACDefMethodNameImpl extends TACNamedElementImpl implements TACDefMethodName {

  public TACDefMethodNameImpl(@NotNull ASTNode node) {
    super(node);
  }

  public void accept(@NotNull TACVisitor visitor) {
    visitor.visitDefMethodName(this);
  }

  public void accept(@NotNull PsiElementVisitor visitor) {
    if (visitor instanceof TACVisitor) accept((TACVisitor) visitor);
    else super.accept(visitor);
  }

  @Override
  @NotNull
  public PsiElement getStringvar() {
    return findNotNullChildByType(STRINGVAR);
  }

  @Override
  @Nullable
  public String getStringVar() {
    return TAC_parserParserUtil.getStringVar(this);
  }

  @Override
  public String getName() {
    return TAC_parserParserUtil.getName(this);
  }

  @Override
  @Nullable
  public PsiElement getNameIdentifier() {
    return TAC_parserParserUtil.getNameIdentifier(this);
  }

  @Override
  @NotNull
  public PsiReference[] getReferences() {
    return TAC_parserParserUtil.getReferences(this);
  }
}
