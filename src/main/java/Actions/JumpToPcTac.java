/*
 *  BSD 2-Clause License - see ./LICENSE for details.
 */

package Actions;

import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import com.intellij.openapi.editor.Editor;
import com.intellij.openapi.editor.ScrollType;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiFile;
import com.intellij.psi.util.PsiTreeUtil;
import org.jetbrains.annotations.NotNull;
import taclanguage.autogenerated.psi.*;

import java.util.Objects;


public class JumpToPcTac extends AnAction {
    private TACGotoInst gotoInst;
    private Editor editor;
    private PsiFile psiFile;
    private PsiElement elementAt;
    @Override
    public void update(@NotNull AnActionEvent e) {
        final VirtualFile virtualFile = e.getData(CommonDataKeys.VIRTUAL_FILE);
        editor = e.getData(CommonDataKeys.EDITOR);
        psiFile = e.getData(CommonDataKeys.PSI_FILE);
        final String extension = virtualFile != null ? virtualFile.getExtension() : "";
        elementAt = psiFile.findElementAt(editor.getCaretModel().getOffset());
        TACInstructionBody parent =
                PsiTreeUtil.getParentOfType(elementAt, TACInstructionBody.class);
        gotoInst = PsiTreeUtil.findChildOfType(parent, TACGotoInst.class);
        e.getPresentation()
                .setEnabledAndVisible(
                        gotoInst != null
                                && "tac".equals(extension));
    }

    @Override
    public void actionPerformed(@NotNull AnActionEvent e) {
        TACMethodDeclaration methodDeclaration = PsiTreeUtil.getParentOfType(elementAt, TACMethodDeclaration.class);
        for(PsiElement element : PsiTreeUtil.findChildrenOfType(methodDeclaration, PsiElement.class)) {
                // ... and set the caret accordingly
                String test = element.getText();
                if (element.getText().matches("\\d+"))
                    if(element.getNextSibling() != null && element.getNextSibling().getText().equals(":"))
                        if(element.getText().equals(gotoInst.getNumber().getText())) {
                    editor.getCaretModel().moveToOffset(element.getTextOffset(), true);
                    editor.getScrollingModel().scrollToCaret(ScrollType.CENTER_UP);
                }
        }
    }
}
