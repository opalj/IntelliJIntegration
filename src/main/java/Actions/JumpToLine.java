package Actions;

import JavaByteCodeLanguage.autoGenerated.psi.*;
import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import com.intellij.openapi.editor.Editor;
import com.intellij.openapi.editor.ScrollType;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiFile;
import com.intellij.psi.util.PsiTreeUtil;

public class JumpToLine extends AnAction {

  @Override
  public void actionPerformed(AnActionEvent e) {
    Editor editor = e.getData(CommonDataKeys.EDITOR);
    PsiFile element = e.getData(CommonDataKeys.PSI_FILE);
    PsiElement elementAt = element.findElementAt(editor.getCaretModel().getOffset());
    JavaByteCodeInstructionBody parent =
        PsiTreeUtil.getParentOfType(elementAt, JavaByteCodeInstructionBody.class);
    if (parent != null
        && (parent.getInstr().getMnemonic().getText().contains("GOTO")
            || parent.getInstr().getMnemonic().getText().contains("IF"))) {
      PsiElement number = parent.getInstr().getNumber();
      if (number != null) {
        JavaByteCodeMethodDeclaration methodDeclaration =
            PsiTreeUtil.getParentOfType(elementAt, JavaByteCodeMethodDeclaration.class);
        for (JavaByteCodePcNumber javaByteCodePcNumber :
            PsiTreeUtil.findChildrenOfType(methodDeclaration, JavaByteCodePcNumber.class)) {
          if (javaByteCodePcNumber.getNumber().getText().equals(number.getText())) {
            editor.getCaretModel().moveToOffset(javaByteCodePcNumber.getTextOffset(), true);
            editor.getScrollingModel().scrollToCaret(ScrollType.CENTER_UP);
          }
        }
      }
    }
  }
}
