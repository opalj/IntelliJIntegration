/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package taclanguage.autogenerated.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static taclanguage.autogenerated.psi.TAC_elementTypeHolder.*;


/**
 * This class is a scanner generated by
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>TAC.flex</tt>
 */
public class TACLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
          0, 0
  };

  /**
   * Translates characters to character classes
   * Chosen bits are [9, 6, 6]
   * Total runtime size is 1696 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>12]|((ch>>6)&0x3f)]<<6)|(ch&0x3f)];
  }

  /* The ZZ_CMAP_Z table has 272 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
          "\1\0\1\100\1\200\u010d\100");

  /* The ZZ_CMAP_Y table has 192 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
          "\1\0\1\1\1\2\175\3\1\4\43\3\1\5\33\3");

  /* The ZZ_CMAP_A table has 384 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
          "\11\0\1\3\4\2\22\0\1\3\1\67\1\14\1\0\1\70\1\0\1\63\1\12\1\15\1\20\1\5\1\63"+
                  "\1\62\1\6\1\10\1\4\12\7\1\71\1\72\1\64\1\66\1\65\1\0\1\60\1\74\1\101\1\40"+
                  "\1\106\1\11\1\75\1\61\1\103\1\42\2\61\1\41\1\57\1\76\1\77\1\37\1\111\1\104"+
                  "\1\102\1\100\1\110\1\56\1\105\3\61\1\17\1\13\1\22\1\63\1\107\1\0\1\25\1\46"+
                  "\1\23\1\45\1\27\1\36\1\51\1\50\1\33\2\61\1\24\1\32\1\30\1\43\1\53\1\61\1\35"+
                  "\1\26\1\34\1\31\1\44\1\52\1\55\1\47\1\54\1\16\1\63\1\21\7\0\1\1\45\0\1\15"+
                  "\17\0\1\20\154\0\2\1\122\0\1\73\3\0");

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
          "\1\1\1\2\1\3\1\4\2\5\1\6\1\7\1\10"+
                  "\2\2\2\11\1\12\24\10\1\13\1\14\2\15\1\16"+
                  "\1\2\1\17\1\20\1\21\6\10\1\22\1\0\2\6"+
                  "\1\0\1\23\3\0\1\1\3\0\4\10\1\1\13\10"+
                  "\1\24\26\10\1\15\7\10\1\0\1\1\2\0\5\10"+
                  "\3\1\1\0\12\10\1\25\6\10\1\0\31\10\1\26"+
                  "\1\22\1\1\2\0\3\10\1\25\3\1\5\10\1\27"+
                  "\11\10\1\0\1\30\11\10\1\31\6\10\1\32\3\10"+
                  "\1\1\2\0\1\10\2\1\12\10\1\24\1\10\1\33"+
                  "\1\0\10\10\1\34\4\10\1\35\1\36\1\10\1\1"+
                  "\1\0\2\1\10\10\1\37\1\0\11\10\1\40\1\10"+
                  "\1\41\1\10\1\1\1\0\2\1\3\10\1\42\3\10"+
                  "\1\0\1\10\1\43\1\10\1\44\3\10\1\45\1\1"+
                  "\1\0\1\1\1\46\4\10\1\0\2\10\1\47\2\10"+
                  "\1\1\1\0\1\1\3\10\1\0\2\10\1\50\1\1"+
                  "\1\0\1\1\1\0\1\51\1\0\1\10\1\52\2\1"+
                  "\2\0\1\10\1\1\2\0\1\10\2\0\1\10\1\0"+
                  "\1\10\1\0\1\10\1\0\1\53\2\0\1\54";

  private static int [] zzUnpackAction() {
    int [] result = new int[350];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
          "\0\0\0\112\0\112\0\224\0\112\0\336\0\u0128\0\112"+
                  "\0\u0172\0\u01bc\0\u0206\0\112\0\u0250\0\112\0\u029a\0\u02e4"+
                  "\0\u032e\0\u0378\0\u03c2\0\u040c\0\u0456\0\u04a0\0\u04ea\0\u0534"+
                  "\0\u057e\0\u05c8\0\u0612\0\u065c\0\u06a6\0\u06f0\0\u073a\0\u0784"+
                  "\0\u07ce\0\u0818\0\112\0\112\0\u0862\0\u08ac\0\u08f6\0\u08f6"+
                  "\0\112\0\112\0\112\0\u0940\0\u098a\0\u09d4\0\u0a1e\0\u0a68"+
                  "\0\u0ab2\0\u0afc\0\u0b46\0\u0b90\0\u0bda\0\u01bc\0\112\0\u0c24"+
                  "\0\u0206\0\u0c6e\0\112\0\u0cb8\0\u0d02\0\u0d4c\0\u0d96\0\u0de0"+
                  "\0\u0e2a\0\u0e74\0\u0ebe\0\u0f08\0\u0f52\0\u0f9c\0\u0fe6\0\u1030"+
                  "\0\u107a\0\u10c4\0\u110e\0\u1158\0\u11a2\0\u11ec\0\u0172\0\u1236"+
                  "\0\u1280\0\u12ca\0\u1314\0\u135e\0\u13a8\0\u13f2\0\u143c\0\u1486"+
                  "\0\u14d0\0\u151a\0\u1564\0\u15ae\0\u15f8\0\u1642\0\u168c\0\u16d6"+
                  "\0\u1720\0\u176a\0\u17b4\0\u17fe\0\u1848\0\112\0\u1892\0\u18dc"+
                  "\0\u1926\0\u1970\0\u19ba\0\u1a04\0\u1a4e\0\u1a98\0\u1ae2\0\u1b2c"+
                  "\0\u1b76\0\u1bc0\0\u1c0a\0\u1c54\0\u1c9e\0\u1ce8\0\u1d32\0\u1d7c"+
                  "\0\u1dc6\0\u1e10\0\u1e5a\0\u1ea4\0\u1eee\0\u1f38\0\u1f82\0\u1fcc"+
                  "\0\u2016\0\u2060\0\u20aa\0\u20f4\0\u213e\0\u2188\0\u21d2\0\u221c"+
                  "\0\u2266\0\u22b0\0\u22fa\0\u2344\0\u238e\0\u23d8\0\u2422\0\u246c"+
                  "\0\u24b6\0\u2500\0\u254a\0\u2594\0\u25de\0\u2628\0\u2672\0\u26bc"+
                  "\0\u2706\0\u2750\0\u279a\0\u27e4\0\u282e\0\u2878\0\u28c2\0\u290c"+
                  "\0\u2956\0\u29a0\0\u29ea\0\u2a34\0\u2a7e\0\u0172\0\112\0\u2ac8"+
                  "\0\u2b12\0\u2b5c\0\u2ba6\0\u2bf0\0\u2c3a\0\u0172\0\u2c84\0\u2cce"+
                  "\0\u0250\0\u2d18\0\u2d62\0\u2dac\0\u2df6\0\u2e40\0\u0172\0\u2e8a"+
                  "\0\u2ed4\0\u2f1e\0\u2f68\0\u2fb2\0\u2ffc\0\u3046\0\u3090\0\u30da"+
                  "\0\u3124\0\u0172\0\u316e\0\u31b8\0\u3202\0\u324c\0\u3296\0\u32e0"+
                  "\0\u332a\0\u3374\0\u33be\0\u0172\0\u3408\0\u3452\0\u349c\0\u34e6"+
                  "\0\u3530\0\u357a\0\u0172\0\u35c4\0\u360e\0\u3658\0\u36a2\0\u36ec"+
                  "\0\u3736\0\u3780\0\u37ca\0\u3814\0\u385e\0\u38a8\0\u38f2\0\u393c"+
                  "\0\u3986\0\u39d0\0\u3a1a\0\u3a64\0\u3aae\0\u3af8\0\u3b42\0\u3b8c"+
                  "\0\u0172\0\u3bd6\0\u3c20\0\u3c6a\0\u3cb4\0\u3cfe\0\u3d48\0\u3d92"+
                  "\0\u3ddc\0\u3e26\0\u0172\0\u3e70\0\u3eba\0\u3f04\0\u3f4e\0\u0172"+
                  "\0\u0172\0\u3f98\0\u3fe2\0\u402c\0\u4076\0\u40c0\0\u410a\0\u4154"+
                  "\0\u419e\0\u41e8\0\u4232\0\u427c\0\u42c6\0\u4310\0\u0172\0\u435a"+
                  "\0\u43a4\0\u43ee\0\u4438\0\u4482\0\u44cc\0\u4516\0\u4560\0\u45aa"+
                  "\0\u45f4\0\u0172\0\u463e\0\u0172\0\u4688\0\u46d2\0\u471c\0\u4766"+
                  "\0\u47b0\0\u47fa\0\u4844\0\u488e\0\u0172\0\u48d8\0\u4922\0\u496c"+
                  "\0\u49b6\0\u4a00\0\u0172\0\u4a4a\0\u0172\0\u4a94\0\u4ade\0\u4b28"+
                  "\0\u0172\0\u4b72\0\u4bbc\0\u4c06\0\112\0\u4c50\0\u4c9a\0\u4ce4"+
                  "\0\u4d2e\0\u4d78\0\u4dc2\0\u4e0c\0\u0172\0\u4e56\0\u4ea0\0\u4eea"+
                  "\0\u4f34\0\u4f7e\0\u4fc8\0\u5012\0\u505c\0\u50a6\0\u50f0\0\u513a"+
                  "\0\u0172\0\u5184\0\u51ce\0\u5218\0\u5262\0\u0172\0\u52ac\0\u52f6"+
                  "\0\u0172\0\u5340\0\u538a\0\u53d4\0\u541e\0\u5468\0\u54b2\0\u54fc"+
                  "\0\u5546\0\u5590\0\u55da\0\u5624\0\u566e\0\u56b8\0\u5702\0\u574c"+
                  "\0\u5796\0\u57e0\0\u0172\0\u582a\0\u5874\0\112";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[350];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
          "\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11"+
                  "\1\12\1\2\1\13\1\14\1\15\1\14\3\16\1\17"+
                  "\1\20\1\21\1\22\1\23\1\24\2\11\1\25\1\26"+
                  "\1\27\1\30\1\31\1\32\1\33\2\11\1\34\1\35"+
                  "\1\36\2\11\1\37\1\11\1\40\2\11\1\41\1\42"+
                  "\1\43\1\11\1\44\1\5\1\45\1\46\1\47\1\50"+
                  "\1\11\1\51\1\52\1\53\1\54\1\55\2\11\1\56"+
                  "\1\57\2\11\1\60\3\11\1\61\1\11\116\0\1\62"+
                  "\1\63\113\0\1\7\111\0\1\7\1\64\1\65\12\0"+
                  "\1\65\11\0\1\65\6\0\1\65\53\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\12\66\1\67\1\70\76\66\13\71"+
                  "\1\72\1\67\75\71\21\0\1\73\2\0\1\74\2\0"+
                  "\1\75\23\0\1\76\45\0\1\11\1\0\1\11\11\0"+
                  "\1\11\1\77\1\100\22\11\1\101\7\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\20\11\1\102\1\103\13\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\7\0"+
                  "\1\11\1\0\1\11\11\0\23\11\1\104\11\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\7\0"+
                  "\1\11\1\0\1\11\11\0\11\11\1\105\12\11\1\106"+
                  "\1\107\7\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\1\11"+
                  "\1\110\3\11\1\111\24\11\1\112\2\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\2\11\1\113\1\11\1\114\30\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\5\11\1\115\1\11"+
                  "\1\116\3\11\1\117\21\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\12\11\1\120\12\11\1\121\7\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\4\11\1\122\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\11\1\123\6\11\1\124\24\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\15\11\1\125\1\126"+
                  "\16\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\3\11\1\127"+
                  "\12\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\13\11\1\130"+
                  "\2\11\7\0\1\11\1\0\1\11\11\0\20\11\1\131"+
                  "\14\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\4\11\1\132"+
                  "\13\11\1\133\14\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\20\11\1\134\3\11\1\135\10\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\20\11\1\136\14\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\137\3\11\1\140\3\11\1\141"+
                  "\22\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\3\11\1\142"+
                  "\12\11\7\0\1\11\1\0\1\11\11\0\4\11\1\143"+
                  "\12\11\1\144\15\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\2\11\1\145\13\11\11\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\1\5\1\0\1\146\1\0"+
                  "\1\11\3\0\16\11\65\0\1\5\1\146\111\0\1\146"+
                  "\32\0\1\11\1\0\1\11\11\0\11\11\1\147\23\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\10\11\1\150\24\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\1\151\6\11\1\152"+
                  "\6\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\3\11\1\153"+
                  "\12\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\13\11\1\154"+
                  "\2\11\7\0\1\11\1\0\1\155\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\1\62"+
                  "\2\0\107\62\4\63\1\0\1\156\104\63\7\0\1\64"+
                  "\1\0\1\65\12\0\1\65\11\0\1\65\6\0\1\65"+
                  "\53\0\1\65\102\0\1\66\2\0\107\66\1\71\2\0"+
                  "\107\71\44\0\1\157\122\0\1\160\61\0\1\161\73\0"+
                  "\1\11\1\0\1\11\11\0\2\11\1\162\32\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\7\0"+
                  "\1\11\1\0\1\11\11\0\6\11\1\163\2\11\1\164"+
                  "\23\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\2\11\1\165"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\5\11\1\166"+
                  "\27\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\167\1\0\1\167\7\0\1\73\1\0"+
                  "\4\167\1\170\12\167\1\171\15\167\1\0\1\167\1\172"+
                  "\1\0\2\11\2\0\1\11\3\0\13\167\1\11\2\167"+
                  "\7\0\1\11\1\0\1\11\11\0\3\11\1\173\31\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\2\11\1\174\7\11"+
                  "\1\175\22\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\5\11"+
                  "\1\176\27\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\20\11"+
                  "\1\177\14\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\3\11"+
                  "\1\200\31\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\6\11"+
                  "\1\201\26\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\1\202"+
                  "\10\11\1\203\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\11\11\1\204\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\27\11\1\117\5\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\11\11\1\205\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\30\11\1\206\4\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\2\11\1\207\32\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\12\11\1\210\22\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\11\11\1\211\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\20\11\1\212\14\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\5\11\1\213\27\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\2\0\2\214\3\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\14\11\1\215\1\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\2\11\1\216\13\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\1\217\15\11\7\0\1\11\1\0\1\11\11\0\1\11"+
                  "\1\220\6\11\1\221\24\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\13\11\1\222\21\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\6\11\1\223\26\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\20\11\1\224\14\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\225\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\226\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\12\11\1\227\22\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\23\11\1\230\11\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\10\11\1\231\7\11\1\232\14\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\17\11\1\233\15\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\234\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\2\11\1\235\13\11\7\0\1\11"+
                  "\1\0\1\236\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\237\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\4\11\1\240\30\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\35\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\5\11\1\241\10\11\7\0\1\11\1\0\1\11"+
                  "\11\0\17\11\1\242\15\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\10\11\1\243\5\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\3\11\1\244\12\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\1\245\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\1\246\4\0\1\247\114\0\1\157"+
                  "\1\0\1\157\7\0\1\73\1\0\4\157\1\250\30\157"+
                  "\1\0\1\157\1\172\11\0\13\157\1\0\2\157\23\0"+
                  "\1\251\123\0\1\252\63\0\1\11\1\0\1\11\11\0"+
                  "\3\11\1\253\31\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\26\11\1\254\6\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\1\255\34\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\12\11"+
                  "\1\256\22\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\26\11"+
                  "\1\256\6\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\167\1\0\1\167\7\0\1\73"+
                  "\1\0\4\167\1\170\30\167\1\0\1\167\1\172\1\0"+
                  "\2\11\2\0\1\11\3\0\13\167\1\11\2\167\7\0"+
                  "\1\167\1\0\1\167\7\0\1\73\1\0\4\167\1\170"+
                  "\25\167\1\257\2\167\1\0\1\167\1\172\1\0\2\11"+
                  "\2\0\1\11\3\0\13\167\1\11\2\167\7\0\1\167"+
                  "\1\0\1\167\7\0\1\73\1\0\4\167\1\170\1\260"+
                  "\27\167\1\0\1\167\1\172\1\0\2\11\2\0\1\11"+
                  "\3\0\13\167\1\11\2\167\2\0\2\261\115\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\262\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\263\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\10\11\1\264\24\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\265\34\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\12\11\1\266\22\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\117\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\7\11\1\267\25\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\270\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\271\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\10\11\1\272\24\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\273\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\1\11\1\274\33\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\5\11\1\275\27\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\20\11\1\276\14\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\6\11\1\277\26\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\266\32\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\300\32\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\2\0\2\214\35\0"+
                  "\1\301\57\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\6\11\1\302"+
                  "\7\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\6\11\1\303"+
                  "\7\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\10\11\1\304"+
                  "\5\11\7\0\1\11\1\0\1\11\11\0\2\11\1\305"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\22\11\1\256"+
                  "\12\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\2\11\1\306"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\23\11\1\307"+
                  "\11\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\1\11\1\310"+
                  "\33\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\4\11\1\256"+
                  "\30\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\20\11\1\117"+
                  "\14\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\2\11\1\311"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\1\11\1\263"+
                  "\33\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\21\11\1\312"+
                  "\13\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\11\11\1\313"+
                  "\23\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\12\11\1\314"+
                  "\3\11\7\0\1\11\1\0\1\11\11\0\25\11\1\315"+
                  "\7\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\14\11\1\316"+
                  "\1\11\7\0\1\11\1\0\1\11\11\0\34\11\1\317"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\12\11\1\320\22\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\1\11\1\321\33\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\16\11\1\322\16\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\6\11\1\323\7\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\3\11\1\324\12\11"+
                  "\7\0\1\11\1\0\1\11\11\0\16\11\1\325\16\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\10\11\1\326\5\11"+
                  "\7\0\1\157\1\0\1\157\7\0\1\73\1\0\4\157"+
                  "\1\250\25\157\1\327\2\157\1\0\1\157\1\172\11\0"+
                  "\13\157\1\0\2\157\27\0\1\330\107\0\1\331\73\0"+
                  "\1\11\1\0\1\11\11\0\3\11\1\267\31\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\7\0"+
                  "\1\11\1\0\1\11\11\0\25\11\1\332\7\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\7\0"+
                  "\1\11\1\0\1\11\11\0\25\11\1\117\7\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\16\11\7\0"+
                  "\1\167\1\0\1\167\7\0\1\73\1\0\1\333\3\167"+
                  "\1\170\30\167\1\0\1\167\1\172\1\0\2\11\2\0"+
                  "\1\11\3\0\13\167\1\11\2\167\7\0\1\167\1\0"+
                  "\1\167\7\0\1\73\1\0\4\167\1\170\15\167\1\334"+
                  "\12\167\1\0\1\167\1\172\1\0\2\11\2\0\1\11"+
                  "\3\0\13\167\1\11\2\167\7\0\1\11\1\0\1\11"+
                  "\11\0\12\11\1\335\22\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\10\11\1\336\24\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\1\337\34\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\25\11\1\340\7\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\11\11\1\256\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\30\11\1\341\4\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\5\11\1\342\27\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\21\11\1\343\13\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\12\11\1\344\22\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\4\11\1\345\30\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\3\11\1\346\31\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\27\11\1\347\5\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\12\11\1\350\22\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\1\11\1\351\33\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\33\0\1\352\65\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\4\11\1\353\11\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\10\11\1\354\5\11\7\0\1\11\1\0"+
                  "\1\11\11\0\11\11\1\355\23\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\6\11\1\356\26\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\1\11\1\225\33\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\357\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\7\11\1\167\25\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\360\32\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\361\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\20\11\1\362\14\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\6\11\1\363\7\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\3\11\1\364\12\11\7\0\1\11\1\0"+
                  "\1\11\11\0\10\11\1\365\24\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\11\11\0\22\11\1\366\12\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\16\11\7\0\1\11\1\0"+
                  "\1\367\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\11\11\1\370\4\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\6\11\1\371\7\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\10\11\1\372\5\11\7\0\1\157\1\0\1\157\7\0"+
                  "\1\73\1\0\1\373\3\157\1\250\30\157\1\0\1\157"+
                  "\1\172\11\0\13\157\1\0\2\157\53\0\1\374\70\0"+
                  "\1\157\66\0\1\11\1\0\1\11\11\0\11\11\1\117"+
                  "\23\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\167\1\0\1\167\7\0\1\73\1\0"+
                  "\4\167\1\375\30\167\1\0\1\167\1\172\1\0\2\11"+
                  "\2\0\1\11\3\0\13\167\1\11\2\167\7\0\1\167"+
                  "\1\0\1\167\7\0\1\73\1\0\4\167\1\376\30\167"+
                  "\1\0\1\167\1\172\1\0\2\11\2\0\1\11\3\0"+
                  "\13\167\1\11\2\167\7\0\1\11\1\0\1\11\11\0"+
                  "\2\11\1\377\32\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\1\351\34\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\11\11"+
                  "\1\u0100\23\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\12\11"+
                  "\1\u0101\22\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\11\11"+
                  "\1\u0102\23\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\22\11"+
                  "\1\u0103\12\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\4\11"+
                  "\1\351\30\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\13\11"+
                  "\1\u0104\21\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\7\11"+
                  "\1\u0105\25\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\10\11"+
                  "\1\u0106\24\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\3\11"+
                  "\1\u0107\31\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\5\11"+
                  "\1\117\27\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\30\0\1\u0108\70\0\1\11\1\0\1\11"+
                  "\11\0\34\11\1\u0109\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\3\11\1\u010a\12\11\7\0\1\11\1\0\1\11\11\0"+
                  "\10\11\1\u010b\24\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\1\11\1\u010c\33\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\2\11\1\u010d\32\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\11\11\1\343\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\1\u010e\34\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\22\11"+
                  "\1\u010f\12\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\35\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\2\11"+
                  "\1\u0110\13\11\7\0\1\11\1\0\1\11\11\0\23\11"+
                  "\1\u0111\11\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\3\11"+
                  "\1\u0112\31\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\35\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\2\11"+
                  "\1\u0113\3\11\1\u0114\7\11\7\0\1\11\1\0\1\11"+
                  "\11\0\35\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\3\11\1\u0115\12\11\7\0\1\157\1\0\1\157"+
                  "\7\0\1\73\1\0\4\157\1\u0116\30\157\1\0\1\157"+
                  "\1\172\11\0\13\157\1\0\2\157\34\0\1\u0117\64\0"+
                  "\1\167\1\0\1\167\7\0\1\73\1\0\4\167\1\170"+
                  "\23\167\1\u0118\1\167\1\257\2\167\1\0\1\167\1\172"+
                  "\1\0\2\11\2\0\1\11\3\0\13\167\1\11\2\167"+
                  "\7\0\1\167\1\0\1\167\7\0\1\73\1\0\4\167"+
                  "\1\170\25\167\1\u0119\2\167\1\0\1\167\1\172\1\0"+
                  "\2\11\2\0\1\11\3\0\13\167\1\11\2\167\7\0"+
                  "\1\11\1\0\1\11\11\0\1\u010c\34\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\13\11\1\u011a\21\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\20\11\1\u011b\14\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\10\11\1\u011c\24\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\3\11\1\u011d\31\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\2\11\1\u011e\32\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\4\11\1\u011f\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\4\11\1\u0120\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\27\0\1\u0121"+
                  "\71\0\1\11\1\0\1\u0122\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\11\11\1\u0123\4\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\11\1\343\33\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\351\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\5\11\1\256\27\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\u0124\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\3\11\1\u0125\31\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\17\11\1\u0126\15\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\6\11\1\u0127\26\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\1\u0128\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\11\11\1\u0129\4\11\7\0\1\157\1\0"+
                  "\1\157\7\0\1\73\1\0\4\157\1\250\23\157\1\u012a"+
                  "\1\157\1\327\2\157\1\0\1\157\1\172\11\0\13\157"+
                  "\1\0\2\157\33\0\1\u012b\65\0\1\167\1\0\1\167"+
                  "\7\0\1\73\1\0\4\167\1\170\4\167\1\u012c\23\167"+
                  "\1\0\1\167\1\172\1\0\2\11\2\0\1\11\3\0"+
                  "\13\167\1\11\2\167\7\0\1\167\1\0\1\167\7\0"+
                  "\1\73\1\0\1\333\3\167\1\170\30\167\1\0\1\167"+
                  "\1\172\1\0\2\11\1\u012d\1\0\1\11\3\0\13\167"+
                  "\1\11\2\167\7\0\1\11\1\0\1\11\11\0\30\11"+
                  "\1\351\4\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\5\11"+
                  "\1\u012e\27\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\20\11"+
                  "\1\u012f\14\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\1\u0130"+
                  "\34\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\5\11\1\u0131"+
                  "\27\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\7\0\1\11\1\0\1\11\11\0\5\11\1\u010c"+
                  "\27\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\16\11\2\0\2\u0132\115\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\4\11\1\u0133\11\11\7\0\1\11\1\0\1\11\11\0"+
                  "\4\11\1\u0134\30\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\15\11\1\u0135\17\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\11\11\1\u0136\23\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\7\0\1\11\1\0\1\11\11\0"+
                  "\34\11\1\u0137\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\157\1\0\1\157\7\0\1\73"+
                  "\1\0\4\157\1\250\4\157\1\u0138\23\157\1\0\1\157"+
                  "\1\172\11\0\13\157\1\0\2\157\43\0\1\u0139\55\0"+
                  "\1\167\1\0\1\167\7\0\1\73\1\0\4\167\1\170"+
                  "\3\167\1\u013a\24\167\1\0\1\167\1\172\1\0\2\11"+
                  "\2\0\1\11\3\0\13\167\1\11\2\167\7\0\1\11"+
                  "\1\0\1\11\11\0\10\11\1\u013b\24\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\5\11\1\u013c\27\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\4\11\1\267\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\u013d\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\2\0\2\u0132"+
                  "\36\0\1\u013e\56\0\1\11\1\0\1\11\11\0\35\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\7\11"+
                  "\1\u013f\6\11\7\0\1\11\1\0\1\11\11\0\22\11"+
                  "\1\351\12\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\11\11\0\4\11"+
                  "\1\u0140\30\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\16\11\7\0\1\11\1\0\1\u0141\11\0\35\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\16\11"+
                  "\7\0\1\157\1\0\1\157\7\0\1\73\1\0\4\157"+
                  "\1\250\3\157\1\u0142\24\157\1\0\1\157\1\172\11\0"+
                  "\13\157\1\0\2\157\30\0\1\u0143\70\0\1\167\1\0"+
                  "\1\167\7\0\1\73\1\0\4\167\1\170\13\167\1\u0144"+
                  "\14\167\1\0\1\167\1\172\1\0\2\11\2\0\1\11"+
                  "\3\0\13\167\1\11\2\167\7\0\1\11\1\0\1\11"+
                  "\11\0\31\11\1\u0124\3\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\5\0\1\u0145\3\0\35\11\1\157\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\7\0\1\11\1\0\1\11"+
                  "\11\0\3\11\1\u0146\31\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\16\11\30\0\1\u0147\70\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\3\11\1\u0148\12\11\7\0\1\11"+
                  "\1\0\1\11\11\0\3\11\1\u0149\31\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\16\11\7\0\1\157"+
                  "\1\0\1\157\7\0\1\73\1\0\4\157\1\250\13\157"+
                  "\1\u014a\14\157\1\0\1\157\1\172\11\0\13\157\1\0"+
                  "\2\157\17\0\1\u0145\40\0\1\157\40\0\1\167\1\0"+
                  "\1\167\7\0\1\73\1\0\4\167\1\170\1\u014b\27\167"+
                  "\1\0\1\167\1\172\1\0\2\11\2\0\1\11\3\0"+
                  "\13\167\1\11\2\167\56\0\1\u014c\61\0\1\u014d\72\0"+
                  "\1\11\1\0\1\11\11\0\35\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\12\11\1\u014e\3\11\7\0"+
                  "\1\157\1\0\1\157\7\0\1\73\1\0\4\157\1\250"+
                  "\1\u014f\27\157\1\0\1\157\1\172\11\0\13\157\1\0"+
                  "\2\157\7\0\1\167\1\0\1\167\5\0\1\u0145\1\0"+
                  "\1\73\1\0\4\167\1\170\30\167\1\157\1\167\1\172"+
                  "\1\0\2\11\2\0\1\11\3\0\13\167\1\11\2\167"+
                  "\57\0\1\u0150\66\0\1\u0151\64\0\1\11\1\0\1\11"+
                  "\11\0\35\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\2\11\1\u0152\13\11\7\0\1\157\1\0\1\157"+
                  "\5\0\1\u0145\1\0\1\73\1\0\4\157\1\250\32\157"+
                  "\1\172\11\0\13\157\1\0\2\157\22\0\1\u0153\124\0"+
                  "\1\u0154\63\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\1\u0155\15\11"+
                  "\60\0\1\157\62\0\1\u0156\67\0\1\11\1\0\1\11"+
                  "\11\0\34\11\1\u0157\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\23\0\1\u0158\75\0\1\11\1\0"+
                  "\1\u0159\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\16\11\34\0\1\u015a\64\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\6\11\1\u015b\7\11\33\0\1\u015c\121\0"+
                  "\1\u015d\76\0\1\u015e\61\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[22718];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
          "Unknown internal scanner error",
          "Error: could not match input",
          "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
          "\1\1\2\11\1\1\1\11\2\1\1\11\3\1\1\11"+
                  "\1\1\1\11\24\1\2\11\4\1\3\11\7\1\1\0"+
                  "\2\1\1\0\1\11\3\0\1\11\3\0\47\1\1\11"+
                  "\7\1\1\0\1\1\2\0\10\1\1\0\21\1\1\0"+
                  "\32\1\1\11\1\1\2\0\26\1\1\0\26\1\2\0"+
                  "\20\1\1\0\21\1\1\0\13\1\1\0\16\1\1\0"+
                  "\11\1\1\0\11\1\1\0\1\1\1\11\4\1\1\0"+
                  "\6\1\1\0\4\1\1\0\4\1\1\0\1\1\1\0"+
                  "\1\1\1\0\4\1\2\0\2\1\2\0\1\1\2\0"+
                  "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\2\0"+
                  "\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[350];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
   the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
   from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public TACLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public TACLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /**
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
          { return LEVEL;
          }
          // fall through
          case 45: break;
          case 2:
          { return BAD_CHARACTER;
          }
          // fall through
          case 46: break;
          case 3:
          { return WHITE_SPACE;
          }
          // fall through
          case 47: break;
          case 4:
          {
//            return SLASH;
          }
          // fall through
          case 48: break;
          case 5:
          { return OPERATORS;
          }
          // fall through
          case 49: break;
          case 6:
          { return NUMBER;
          }
          // fall through
          case 50: break;
          case 7:
          { return DOT;
          }
          // fall through
          case 51: break;
          case 8:
          { return STRINGVAR;
          }
          // fall through
          case 52: break;
          case 9:
          { return LBRACKET;
          }
          // fall through
          case 53: break;
          case 10:
          { return RBRACKET;
          }
          // fall through
          case 54: break;
          case 11:
          { return AT;
          }
          // fall through
          case 55: break;
          case 12:
          { return COMMA;
          }
          // fall through
          case 56: break;
          case 13:
          { return COMPARATORS;
          }
          // fall through
          case 57: break;
          case 14:
          { return EQ;
          }
          // fall through
          case 58: break;
          case 15:
          { return COLON;
          }
          // fall through
          case 59: break;
          case 16:
          { return SEMICOLON;
          }
          // fall through
          case 60: break;
          case 17:
          { return SWITCH;
          }
          // fall through
          case 61: break;
          case 18:
          { return COMMENT;
          }
          // fall through
          case 62: break;
          case 19:
          { return STRING;
          }
          // fall through
          case 63: break;
          case 20:
          { return KEYWORDS;
          }
          // fall through
          case 64: break;
          case 21:
          { return PRIMITIVETYPE;
          }
          // fall through
          case 65: break;
          case 22:
          { return UEQ;
          }
          // fall through
          case 66: break;
          case 23:
          { return JAVATYPEHEAD;
          }
          // fall through
          case 67: break;
          case 24:
          { return PLUS;
          }
          // fall through
          case 68: break;
          case 25:
          { return VOID;
          }
          // fall through
          case 69: break;
          case 26:
          { return THIS;
          }
          // fall through
          case 70: break;
          case 27:
          { return MODIFIER;
          }
          // fall through
          case 71: break;
          case 28:
          { return MINUS;
          }
          // fall through
          case 72: break;
          case 29:
          { return THROW;
          }
          // fall through
          case 73: break;
          case 30:
          { return BOOLS;
          }
          // fall through
          case 74: break;
          case 31:
          { return THROWS;
          }
          // fall through
          case 75: break;
          case 32:
          { return FIELDS;
          }
          // fall through
          case 76: break;
          case 33:
          { return TABLES;
          }
          // fall through
          case 77: break;
          case 34:
          { return EXTENDS;
          }
          // fall through
          case 78: break;
          case 35:
          { return L_ARROW;
          }
          // fall through
          case 79: break;
          case 36:
          { return METHODS;
          }
          // fall through
          case 80: break;
          case 37:
          { return R_ARROW;
          }
          // fall through
          case 81: break;
          case 38:
          { return LVLINDEX;
          }
          // fall through
          case 82: break;
          case 39:
          { return MNEMONIC;
          }
          // fall through
          case 83: break;
          case 40:
          { return TABLENAME;
          }
          // fall through
          case 84: break;
          case 41:
          { return IMPLEMENTS;
          }
          // fall through
          case 85: break;
          case 42:
          { return ATTRIBUTES;
          }
          // fall through
          case 86: break;
          case 43:
          { return CONSTMETHODNAMES;
          }
          // fall through
          case 87: break;
          case 44:
          { return INSTRUCTIONHEAD;
          }
          // fall through
          case 88: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
