/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package taclanguage.autogenerated.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static taclanguage.autogenerated.psi.TAC_elementTypeHolder.*;


/**
 * This class is a scanner generated by
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>TAC.flex</tt>
 */
public class TACLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
          0, 0
  };

  /**
   * Translates characters to character classes
   * Chosen bits are [9, 6, 6]
   * Total runtime size is 1696 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>12]|((ch>>6)&0x3f)]<<6)|(ch&0x3f)];
  }

  /* The ZZ_CMAP_Z table has 272 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
          "\1\0\1\100\1\200\u010d\100");

  /* The ZZ_CMAP_Y table has 192 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
          "\1\0\1\1\1\2\175\3\1\4\43\3\1\5\33\3");

  /* The ZZ_CMAP_A table has 384 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
          "\11\0\1\3\4\2\22\0\1\3\1\67\1\14\1\0\1\70\1\0\1\63\1\12\1\15\1\20\1\5\1\63"+
                  "\1\62\1\6\1\10\1\4\12\7\1\71\1\72\1\64\1\66\1\65\1\0\1\60\1\74\1\61\1\40\1"+
                  "\103\1\11\1\75\1\61\1\77\1\42\2\61\1\41\1\57\1\106\1\101\1\37\1\110\1\100"+
                  "\1\104\1\76\1\107\1\56\1\102\3\61\1\17\1\13\1\22\1\63\1\105\1\0\1\25\1\46"+
                  "\1\23\1\45\1\27\1\36\1\51\1\50\1\33\2\61\1\24\1\32\1\30\1\43\1\53\1\61\1\35"+
                  "\1\26\1\34\1\31\1\44\1\52\1\55\1\47\1\54\1\16\1\63\1\21\7\0\1\1\45\0\1\15"+
                  "\17\0\1\20\154\0\2\1\122\0\1\73\3\0");

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
          "\1\1\1\2\1\3\1\4\2\5\1\6\1\7\1\10"+
                  "\2\2\2\11\1\12\24\10\1\13\1\14\2\15\1\16"+
                  "\1\2\1\17\1\20\1\21\5\10\1\22\1\0\2\6"+
                  "\1\0\1\23\3\0\1\1\3\0\4\10\1\1\13\10"+
                  "\1\24\26\10\1\15\5\10\1\0\1\1\2\0\5\10"+
                  "\3\1\1\0\12\10\1\25\10\10\1\0\26\10\1\26"+
                  "\1\22\1\1\2\0\3\10\1\25\3\1\5\10\1\27"+
                  "\6\10\1\30\3\10\1\0\1\31\11\10\1\32\4\10"+
                  "\1\33\2\10\1\1\2\0\1\10\2\1\12\10\1\24"+
                  "\1\10\1\34\1\0\10\10\1\35\2\10\1\36\1\10"+
                  "\1\1\1\0\2\1\10\10\1\37\1\0\10\10\1\40"+
                  "\1\10\1\1\1\0\2\1\3\10\1\41\3\10\1\0"+
                  "\1\10\1\42\1\10\1\43\1\10\1\44\1\1\1\0"+
                  "\1\1\1\45\4\10\1\0\3\10\1\1\1\0\1\1"+
                  "\3\10\1\0\2\10\1\1\1\0\1\1\1\0\1\46"+
                  "\1\0\1\10\1\47\2\1\2\0\1\10\1\1\2\0"+
                  "\1\10\2\0\1\10\1\0\1\10\1\0\1\10\1\0"+
                  "\1\50\2\0\1\51";

  private static int [] zzUnpackAction() {
    int [] result = new int[333];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
          "\0\0\0\111\0\111\0\222\0\111\0\333\0\u0124\0\111"+
                  "\0\u016d\0\u01b6\0\u01ff\0\111\0\u0248\0\111\0\u0291\0\u02da"+
                  "\0\u0323\0\u036c\0\u03b5\0\u03fe\0\u0447\0\u0490\0\u04d9\0\u0522"+
                  "\0\u056b\0\u05b4\0\u05fd\0\u0646\0\u068f\0\u06d8\0\u0721\0\u076a"+
                  "\0\u07b3\0\u07fc\0\111\0\111\0\u0845\0\u088e\0\u08d7\0\u08d7"+
                  "\0\111\0\111\0\111\0\u0920\0\u0969\0\u09b2\0\u09fb\0\u0a44"+
                  "\0\u0a8d\0\u0ad6\0\u0b1f\0\u0b68\0\u01b6\0\111\0\u0bb1\0\u01ff"+
                  "\0\u0bfa\0\111\0\u0c43\0\u0c8c\0\u0cd5\0\u0d1e\0\u0d67\0\u0db0"+
                  "\0\u0df9\0\u0e42\0\u0e8b\0\u0ed4\0\u0f1d\0\u0f66\0\u0faf\0\u0ff8"+
                  "\0\u1041\0\u108a\0\u10d3\0\u111c\0\u1165\0\u016d\0\u11ae\0\u11f7"+
                  "\0\u1240\0\u1289\0\u12d2\0\u131b\0\u1364\0\u13ad\0\u13f6\0\u143f"+
                  "\0\u1488\0\u14d1\0\u151a\0\u1563\0\u15ac\0\u15f5\0\u163e\0\u1687"+
                  "\0\u16d0\0\u1719\0\u1762\0\u17ab\0\111\0\u17f4\0\u183d\0\u1886"+
                  "\0\u18cf\0\u1918\0\u1961\0\u19aa\0\u19f3\0\u1a3c\0\u1a85\0\u1ace"+
                  "\0\u1b17\0\u1b60\0\u1ba9\0\u1bf2\0\u1c3b\0\u1c84\0\u1ccd\0\u1d16"+
                  "\0\u1d5f\0\u1da8\0\u1df1\0\u1e3a\0\u1e83\0\u1ecc\0\u1f15\0\u1f5e"+
                  "\0\u1fa7\0\u1ff0\0\u2039\0\u2082\0\u20cb\0\u2114\0\u215d\0\u21a6"+
                  "\0\u21ef\0\u2238\0\u2281\0\u22ca\0\u2313\0\u235c\0\u23a5\0\u23ee"+
                  "\0\u2437\0\u2480\0\u24c9\0\u2512\0\u255b\0\u25a4\0\u25ed\0\u2636"+
                  "\0\u267f\0\u26c8\0\u2711\0\u275a\0\u27a3\0\u27ec\0\u2835\0\u287e"+
                  "\0\u28c7\0\u016d\0\111\0\u2910\0\u2959\0\u29a2\0\u29eb\0\u2a34"+
                  "\0\u2a7d\0\u016d\0\u2ac6\0\u2b0f\0\u0248\0\u2b58\0\u2ba1\0\u2bea"+
                  "\0\u2c33\0\u2c7c\0\u016d\0\u2cc5\0\u2d0e\0\u2d57\0\u2da0\0\u2de9"+
                  "\0\u2e32\0\u016d\0\u2e7b\0\u2ec4\0\u2f0d\0\u2f56\0\u016d\0\u2f9f"+
                  "\0\u2fe8\0\u3031\0\u307a\0\u30c3\0\u310c\0\u3155\0\u319e\0\u31e7"+
                  "\0\u016d\0\u3230\0\u3279\0\u32c2\0\u330b\0\u016d\0\u3354\0\u339d"+
                  "\0\u33e6\0\u342f\0\u3478\0\u34c1\0\u350a\0\u3553\0\u359c\0\u35e5"+
                  "\0\u362e\0\u3677\0\u36c0\0\u3709\0\u3752\0\u379b\0\u37e4\0\u382d"+
                  "\0\u3876\0\u38bf\0\u016d\0\u3908\0\u3951\0\u399a\0\u39e3\0\u3a2c"+
                  "\0\u3a75\0\u3abe\0\u3b07\0\u3b50\0\u016d\0\u3b99\0\u3be2\0\u016d"+
                  "\0\u3c2b\0\u3c74\0\u3cbd\0\u3d06\0\u3d4f\0\u3d98\0\u3de1\0\u3e2a"+
                  "\0\u3e73\0\u3ebc\0\u3f05\0\u3f4e\0\u3f97\0\u016d\0\u3fe0\0\u4029"+
                  "\0\u4072\0\u40bb\0\u4104\0\u414d\0\u4196\0\u41df\0\u4228\0\u016d"+
                  "\0\u4271\0\u42ba\0\u4303\0\u434c\0\u4395\0\u43de\0\u4427\0\u4470"+
                  "\0\u016d\0\u44b9\0\u4502\0\u454b\0\u4594\0\u45dd\0\u016d\0\u4626"+
                  "\0\u016d\0\u466f\0\u016d\0\u46b8\0\u4701\0\u474a\0\111\0\u4793"+
                  "\0\u47dc\0\u4825\0\u486e\0\u48b7\0\u4900\0\u4949\0\u4992\0\u49db"+
                  "\0\u4a24\0\u4a6d\0\u4ab6\0\u4aff\0\u4b48\0\u4b91\0\u4bda\0\u4c23"+
                  "\0\u4c6c\0\u4cb5\0\u4cfe\0\u4d47\0\u016d\0\u4d90\0\u4dd9\0\u016d"+
                  "\0\u4e22\0\u4e6b\0\u4eb4\0\u4efd\0\u4f46\0\u4f8f\0\u4fd8\0\u5021"+
                  "\0\u506a\0\u50b3\0\u50fc\0\u5145\0\u518e\0\u51d7\0\u5220\0\u5269"+
                  "\0\u52b2\0\u016d\0\u52fb\0\u5344\0\111";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[333];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
          "\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11"+
                  "\1\12\1\2\1\13\1\14\1\15\1\14\3\16\1\17"+
                  "\1\20\1\21\1\22\1\23\1\24\2\11\1\25\1\26"+
                  "\1\27\1\30\1\31\1\32\1\33\2\11\1\34\1\35"+
                  "\1\36\2\11\1\37\1\11\1\40\2\11\1\41\1\42"+
                  "\1\43\1\11\1\44\1\5\1\45\1\46\1\47\1\50"+
                  "\1\11\1\51\1\52\1\53\1\54\1\55\1\56\1\11"+
                  "\1\57\6\11\1\60\1\11\115\0\1\61\1\62\112\0"+
                  "\1\7\110\0\1\7\1\63\1\64\12\0\1\64\11\0"+
                  "\1\64\6\0\1\64\52\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\12\65\1\66\1\67\75\65\13\70\1\71\1\66"+
                  "\74\70\21\0\1\72\2\0\1\73\2\0\1\74\23\0"+
                  "\1\75\44\0\1\11\1\0\1\11\11\0\1\11\1\76"+
                  "\1\77\22\11\1\100\7\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\20\11\1\101\1\102\13\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\23\11\1\103\11\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\11\11\1\104\12\11\1\105\1\106\7\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\11\1\0\1\11\11\0\1\11\1\107\3\11"+
                  "\1\110\24\11\1\111\2\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\2\11\1\112\1\11\1\113\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\5\11\1\114\1\11\1\115\3\11"+
                  "\1\116\21\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\12\11"+
                  "\1\117\12\11\1\120\7\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\4\11\1\121\30\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\1\11\1\122\1\123\5\11\1\124\24\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\15\11\1\125\1\126\16\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\5\11\1\127\7\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\11\11\1\130\3\11"+
                  "\7\0\1\11\1\0\1\11\11\0\20\11\1\131\14\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\11\1\0\1\11\11\0\4\11\1\132\13\11"+
                  "\1\133\14\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\20\11"+
                  "\1\134\3\11\1\135\10\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\20\11\1\136\14\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\2\11\1\137\3\11\1\140\3\11\1\141\22\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\11\1\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\5\11\1\142\7\11"+
                  "\7\0\1\11\1\0\1\11\11\0\4\11\1\143\12\11"+
                  "\1\144\15\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\11\0\1\11\11\0\35\11\1\0\1\11"+
                  "\2\0\1\5\1\0\1\145\1\0\1\11\3\0\15\11"+
                  "\65\0\1\5\1\145\110\0\1\145\31\0\1\11\1\0"+
                  "\1\11\11\0\11\11\1\146\23\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\10\11\1\147\24\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\3\11\1\150\11\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\11\11\1\151\3\11\7\0\1\11\1\0"+
                  "\1\152\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\1\61\2\0\106\61\4\62\1\0"+
                  "\1\153\103\62\7\0\1\63\1\0\1\64\12\0\1\64"+
                  "\11\0\1\64\6\0\1\64\52\0\1\64\101\0\1\65"+
                  "\2\0\106\65\1\70\2\0\106\70\44\0\1\154\121\0"+
                  "\1\155\60\0\1\156\72\0\1\11\1\0\1\11\11\0"+
                  "\2\11\1\157\32\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\7\0\1\11\1\0\1\11\11\0"+
                  "\6\11\1\160\2\11\1\161\23\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\162\32\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\5\11\1\163\27\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\164\1\0"+
                  "\1\164\7\0\1\72\1\0\4\164\1\165\12\164\1\166"+
                  "\15\164\1\0\1\164\1\167\1\0\2\11\2\0\1\11"+
                  "\3\0\11\164\1\11\3\164\7\0\1\11\1\0\1\11"+
                  "\11\0\3\11\1\170\31\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\2\11\1\171\7\11\1\172\22\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\5\11\1\173\27\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\20\11\1\174\14\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\3\11\1\175\31\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\6\11\1\176\26\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\177\10\11\1\200\23\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\11\11\1\201\23\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\27\11\1\116\5\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\11\11\1\202\23\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\30\11\1\203\4\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\2\11\1\204\3\11\1\205"+
                  "\26\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\12\11\1\206"+
                  "\22\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\11\11\1\207"+
                  "\23\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\20\11\1\210"+
                  "\14\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\1\11\1\211"+
                  "\33\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\5\11\1\212"+
                  "\27\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\2\0\2\213\3\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\13\11\1\214"+
                  "\1\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\12\11\1\215"+
                  "\2\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\1\216\14\11"+
                  "\7\0\1\11\1\0\1\11\11\0\1\11\1\217\6\11"+
                  "\1\220\24\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\13\11"+
                  "\1\221\21\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\6\11"+
                  "\1\222\26\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\20\11"+
                  "\1\223\14\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\11\11"+
                  "\1\224\23\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\11\11"+
                  "\1\225\23\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\12\11"+
                  "\1\226\22\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\23\11"+
                  "\1\227\11\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\10\11"+
                  "\1\230\7\11\1\231\14\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\17\11\1\232\15\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\233\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\35\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\12\11\1\234\2\11\7\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\235\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\4\11\1\236\30\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\17\11\1\237\15\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\4\11\1\240\10\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\1\241\14\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\14\11\1\242\4\0\1\243\113\0\1\154"+
                  "\1\0\1\154\7\0\1\72\1\0\4\154\1\244\30\154"+
                  "\1\0\1\154\1\167\11\0\11\154\1\0\3\154\23\0"+
                  "\1\245\122\0\1\246\62\0\1\11\1\0\1\11\11\0"+
                  "\3\11\1\247\31\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\7\0\1\11\1\0\1\11\11\0"+
                  "\26\11\1\250\6\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\7\0\1\11\1\0\1\11\11\0"+
                  "\1\251\34\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\12\11"+
                  "\1\252\22\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\11\1\0\1\11\11\0\26\11"+
                  "\1\252\6\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\15\11\7\0\1\164\1\0\1\164\7\0\1\72"+
                  "\1\0\4\164\1\165\30\164\1\0\1\164\1\167\1\0"+
                  "\2\11\2\0\1\11\3\0\11\164\1\11\3\164\7\0"+
                  "\1\164\1\0\1\164\7\0\1\72\1\0\4\164\1\165"+
                  "\25\164\1\253\2\164\1\0\1\164\1\167\1\0\2\11"+
                  "\2\0\1\11\3\0\11\164\1\11\3\164\7\0\1\164"+
                  "\1\0\1\164\7\0\1\72\1\0\4\164\1\165\1\254"+
                  "\27\164\1\0\1\164\1\167\1\0\2\11\2\0\1\11"+
                  "\3\0\11\164\1\11\3\164\2\0\2\255\114\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\256\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\257\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\10\11\1\260\24\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\261\34\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\12\11\1\262\22\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\116\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\7\11\1\263\25\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\264\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\265\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\10\11\1\266\24\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\267\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\1\11\1\270\33\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\5\11\1\271\27\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\272\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\20\11\1\273\14\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\6\11\1\274\26\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\262\32\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\3\11\1\205\31\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\2\11\1\275\32\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\2\0\2\213\35\0"+
                  "\1\276\56\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\10\11\1\277"+
                  "\4\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\10\11\1\300"+
                  "\4\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\4\11\1\301"+
                  "\10\11\7\0\1\11\1\0\1\11\11\0\2\11\1\302"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\22\11\1\252"+
                  "\12\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\2\11\1\303"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\23\11\1\304"+
                  "\11\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\1\11\1\305"+
                  "\33\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\4\11\1\252"+
                  "\30\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\20\11\1\116"+
                  "\14\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\2\11\1\306"+
                  "\32\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\1\11\1\257"+
                  "\33\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\21\11\1\307"+
                  "\13\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\11\11\1\310"+
                  "\23\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\7\11\1\311"+
                  "\5\11\7\0\1\11\1\0\1\11\11\0\25\11\1\312"+
                  "\7\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\13\11\1\313"+
                  "\1\11\7\0\1\11\1\0\1\11\11\0\12\11\1\314"+
                  "\22\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\1\11\1\315"+
                  "\33\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\10\11\1\316"+
                  "\4\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\5\11\1\317"+
                  "\7\11\7\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\4\11\1\320"+
                  "\10\11\7\0\1\154\1\0\1\154\7\0\1\72\1\0"+
                  "\4\154\1\244\25\154\1\321\2\154\1\0\1\154\1\167"+
                  "\11\0\11\154\1\0\3\154\27\0\1\322\106\0\1\323"+
                  "\72\0\1\11\1\0\1\11\11\0\3\11\1\263\31\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\11\1\0\1\11\11\0\25\11\1\324\7\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\11\1\0\1\11\11\0\25\11\1\116\7\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\7\0\1\164\1\0\1\164\7\0\1\72\1\0\1\325"+
                  "\3\164\1\165\30\164\1\0\1\164\1\167\1\0\2\11"+
                  "\2\0\1\11\3\0\11\164\1\11\3\164\7\0\1\164"+
                  "\1\0\1\164\7\0\1\72\1\0\4\164\1\165\15\164"+
                  "\1\326\12\164\1\0\1\164\1\167\1\0\2\11\2\0"+
                  "\1\11\3\0\11\164\1\11\3\164\7\0\1\11\1\0"+
                  "\1\11\11\0\12\11\1\327\22\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\10\11\1\330\24\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\1\331\34\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\25\11\1\332\7\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\252\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\30\11\1\333\4\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\5\11\1\334\27\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\21\11\1\335\13\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\12\11\1\336\22\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\4\11\1\337\30\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\3\11\1\340\31\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\27\11\1\341\5\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\12\11\1\342\22\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\1\11\1\343\33\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\33\0\1\344\64\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\2\11\1\345\12\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\4\11\1\346\10\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\347\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\6\11\1\350\26\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\11\1\224\33\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\4\11\1\351\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\7\11\1\164\25\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\2\11\1\352\32\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\4\11\1\353\30\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\20\11\1\354\14\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\10\11\1\355\4\11\7\0\1\11"+
                  "\1\0\1\11\11\0\10\11\1\356\24\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\22\11\1\357\12\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\6\11\1\360\6\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\4\11\1\361\10\11\7\0\1\154"+
                  "\1\0\1\154\7\0\1\72\1\0\1\362\3\154\1\244"+
                  "\30\154\1\0\1\154\1\167\11\0\11\154\1\0\3\154"+
                  "\53\0\1\363\67\0\1\154\65\0\1\11\1\0\1\11"+
                  "\11\0\11\11\1\116\23\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\164\1\0\1\164"+
                  "\7\0\1\72\1\0\4\164\1\364\30\164\1\0\1\164"+
                  "\1\167\1\0\2\11\2\0\1\11\3\0\11\164\1\11"+
                  "\3\164\7\0\1\164\1\0\1\164\7\0\1\72\1\0"+
                  "\4\164\1\365\30\164\1\0\1\164\1\167\1\0\2\11"+
                  "\2\0\1\11\3\0\11\164\1\11\3\164\7\0\1\11"+
                  "\1\0\1\11\11\0\2\11\1\366\32\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\343\34\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\11\11\1\367\23\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\12\11\1\370\22\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\11\11\1\371\23\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\22\11\1\372\12\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\343\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\13\11\1\373\21\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\7\11\1\374\25\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\10\11\1\375\24\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\3\11\1\376\31\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\5\11\1\116\27\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\30\0\1\377\67\0"+
                  "\1\11\1\0\1\11\11\0\34\11\1\u0100\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\5\11\1\u0101\7\11\7\0\1\11"+
                  "\1\0\1\11\11\0\10\11\1\u0102\24\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\11\1\u0103\33\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\2\11\1\u0104\32\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\11\11\1\335\23\11\1\0\1\11"+
                  "\2\0\2\11\2\0\1\11\3\0\15\11\7\0\1\11"+
                  "\1\0\1\11\11\0\1\u0105\34\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\22\11\1\u0106\12\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\23\11\1\u0107\11\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\3\11\1\u0108\31\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\5\11\1\u0109\7\11\7\0\1\154\1\0"+
                  "\1\154\7\0\1\72\1\0\4\154\1\u010a\30\154\1\0"+
                  "\1\154\1\167\11\0\11\154\1\0\3\154\34\0\1\u010b"+
                  "\63\0\1\164\1\0\1\164\7\0\1\72\1\0\4\164"+
                  "\1\165\23\164\1\u010c\1\164\1\253\2\164\1\0\1\164"+
                  "\1\167\1\0\2\11\2\0\1\11\3\0\11\164\1\11"+
                  "\3\164\7\0\1\164\1\0\1\164\7\0\1\72\1\0"+
                  "\4\164\1\165\25\164\1\u010d\2\164\1\0\1\164\1\167"+
                  "\1\0\2\11\2\0\1\11\3\0\11\164\1\11\3\164"+
                  "\7\0\1\11\1\0\1\11\11\0\1\u0103\34\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\13\11\1\u010e\21\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\20\11\1\u010f\14\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\10\11\1\u0110\24\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\3\11\1\u0111\31\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\2\11\1\u0112\32\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\4\11\1\u0113\30\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\4\11\1\u0114\30\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\27\0"+
                  "\1\u0115\70\0\1\11\1\0\1\u0116\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\35\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\6\11\1\u0117\6\11\7\0"+
                  "\1\11\1\0\1\11\11\0\1\11\1\335\33\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\11\11\1\343\23\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\5\11\1\252\27\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\11\11\1\u0118\23\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\3\11\1\u0119\31\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\6\11\1\u011a\26\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\15\11\7\0"+
                  "\1\11\1\0\1\11\11\0\35\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\6\11\1\u011b\6\11\7\0"+
                  "\1\154\1\0\1\154\7\0\1\72\1\0\4\154\1\244"+
                  "\23\154\1\u011c\1\154\1\321\2\154\1\0\1\154\1\167"+
                  "\11\0\11\154\1\0\3\154\33\0\1\u011d\64\0\1\164"+
                  "\1\0\1\164\7\0\1\72\1\0\4\164\1\165\4\164"+
                  "\1\u011e\23\164\1\0\1\164\1\167\1\0\2\11\2\0"+
                  "\1\11\3\0\11\164\1\11\3\164\7\0\1\164\1\0"+
                  "\1\164\7\0\1\72\1\0\1\325\3\164\1\165\30\164"+
                  "\1\0\1\164\1\167\1\0\2\11\1\u011f\1\0\1\11"+
                  "\3\0\11\164\1\11\3\164\7\0\1\11\1\0\1\11"+
                  "\11\0\30\11\1\343\4\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\5\11\1\u0120\27\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\20\11\1\u0121\14\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\15\11\7\0\1\11\1\0\1\11"+
                  "\11\0\1\u0122\34\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\7\0\1\11\1\0\1\11\11\0"+
                  "\5\11\1\u0123\27\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\7\0\1\11\1\0\1\11\11\0"+
                  "\5\11\1\u0103\27\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\2\0\2\u0124\114\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\2\11\1\u0125\12\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\u0126\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\11\11\1\u0127\23\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\154\1\0"+
                  "\1\154\7\0\1\72\1\0\4\154\1\244\4\154\1\u0128"+
                  "\23\154\1\0\1\154\1\167\11\0\11\154\1\0\3\154"+
                  "\43\0\1\u0129\54\0\1\164\1\0\1\164\7\0\1\72"+
                  "\1\0\4\164\1\165\3\164\1\u012a\24\164\1\0\1\164"+
                  "\1\167\1\0\2\11\2\0\1\11\3\0\11\164\1\11"+
                  "\3\164\7\0\1\11\1\0\1\11\11\0\10\11\1\u012b"+
                  "\24\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\5\11\1\u012c"+
                  "\27\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\4\11\1\263"+
                  "\30\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\11\11\1\u012d"+
                  "\23\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\2\0\2\u0124\36\0\1\u012e\55\0\1\11\1\0"+
                  "\1\11\11\0\35\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\3\11\1\u012f\11\11\7\0\1\11\1\0"+
                  "\1\11\11\0\22\11\1\343\12\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\11\1\0"+
                  "\1\11\11\0\4\11\1\u0130\30\11\1\0\1\11\2\0"+
                  "\2\11\2\0\1\11\3\0\15\11\7\0\1\154\1\0"+
                  "\1\154\7\0\1\72\1\0\4\154\1\244\3\154\1\u0131"+
                  "\24\154\1\0\1\154\1\167\11\0\11\154\1\0\3\154"+
                  "\30\0\1\u0132\67\0\1\164\1\0\1\164\7\0\1\72"+
                  "\1\0\4\164\1\165\13\164\1\u0133\14\164\1\0\1\164"+
                  "\1\167\1\0\2\11\2\0\1\11\3\0\11\164\1\11"+
                  "\3\164\7\0\1\11\1\0\1\11\11\0\31\11\1\u0118"+
                  "\3\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\5\0\1\u0134\3\0"+
                  "\35\11\1\154\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\7\0\1\11\1\0\1\11\11\0\3\11\1\u0135"+
                  "\31\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\15\11\30\0\1\u0136\67\0\1\11\1\0\1\11\11\0"+
                  "\35\11\1\0\1\11\2\0\2\11\2\0\1\11\3\0"+
                  "\5\11\1\u0137\7\11\7\0\1\11\1\0\1\11\11\0"+
                  "\3\11\1\u0138\31\11\1\0\1\11\2\0\2\11\2\0"+
                  "\1\11\3\0\15\11\7\0\1\154\1\0\1\154\7\0"+
                  "\1\72\1\0\4\154\1\244\13\154\1\u0139\14\154\1\0"+
                  "\1\154\1\167\11\0\11\154\1\0\3\154\17\0\1\u0134"+
                  "\40\0\1\154\37\0\1\164\1\0\1\164\7\0\1\72"+
                  "\1\0\4\164\1\165\1\u013a\27\164\1\0\1\164\1\167"+
                  "\1\0\2\11\2\0\1\11\3\0\11\164\1\11\3\164"+
                  "\56\0\1\u013b\60\0\1\u013c\71\0\1\11\1\0\1\11"+
                  "\11\0\35\11\1\0\1\11\2\0\2\11\2\0\1\11"+
                  "\3\0\7\11\1\u013d\5\11\7\0\1\154\1\0\1\154"+
                  "\7\0\1\72\1\0\4\154\1\244\1\u013e\27\154\1\0"+
                  "\1\154\1\167\11\0\11\154\1\0\3\154\7\0\1\164"+
                  "\1\0\1\164\5\0\1\u0134\1\0\1\72\1\0\4\164"+
                  "\1\165\30\164\1\154\1\164\1\167\1\0\2\11\2\0"+
                  "\1\11\3\0\11\164\1\11\3\164\57\0\1\u013f\65\0"+
                  "\1\u0140\63\0\1\11\1\0\1\11\11\0\35\11\1\0"+
                  "\1\11\2\0\2\11\2\0\1\11\3\0\12\11\1\u0141"+
                  "\2\11\7\0\1\154\1\0\1\154\5\0\1\u0134\1\0"+
                  "\1\72\1\0\4\154\1\244\32\154\1\167\11\0\11\154"+
                  "\1\0\3\154\22\0\1\u0142\123\0\1\u0143\62\0\1\11"+
                  "\1\0\1\11\11\0\35\11\1\0\1\11\2\0\2\11"+
                  "\2\0\1\11\3\0\1\u0144\14\11\60\0\1\154\61\0"+
                  "\1\u0145\66\0\1\11\1\0\1\11\11\0\34\11\1\u0146"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\23\0\1\u0147\74\0\1\11\1\0\1\u0148\11\0\35\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\15\11"+
                  "\34\0\1\u0149\63\0\1\11\1\0\1\11\11\0\35\11"+
                  "\1\0\1\11\2\0\2\11\2\0\1\11\3\0\10\11"+
                  "\1\u014a\4\11\33\0\1\u014b\120\0\1\u014c\75\0\1\u014d"+
                  "\60\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[21389];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
          "Unknown internal scanner error",
          "Error: could not match input",
          "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
          "\1\1\2\11\1\1\1\11\2\1\1\11\3\1\1\11"+
                  "\1\1\1\11\24\1\2\11\4\1\3\11\6\1\1\0"+
                  "\2\1\1\0\1\11\3\0\1\11\3\0\47\1\1\11"+
                  "\5\1\1\0\1\1\2\0\10\1\1\0\23\1\1\0"+
                  "\27\1\1\11\1\1\2\0\27\1\1\0\23\1\2\0"+
                  "\20\1\1\0\16\1\1\0\13\1\1\0\13\1\1\0"+
                  "\11\1\1\0\7\1\1\0\1\1\1\11\4\1\1\0"+
                  "\4\1\1\0\4\1\1\0\3\1\1\0\1\1\1\0"+
                  "\1\1\1\0\4\1\2\0\2\1\2\0\1\1\2\0"+
                  "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\2\0"+
                  "\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[333];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
   the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
   from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public TACLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public TACLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /**
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
          { return LEVEL;
          }
          // fall through
          case 42: break;
          case 2:
          { return BAD_CHARACTER;
          }
          // fall through
          case 43: break;
          case 3:
          { return WHITE_SPACE;
          }
          // fall through
          case 44: break;
          case 4:
          {
//            return SLASH;
          }
          // fall through
          case 45: break;
          case 5:
          { return OPERATORS;
          }
          // fall through
          case 46: break;
          case 6:
          { return NUMBER;
          }
          // fall through
          case 47: break;
          case 7:
          { return DOT;
          }
          // fall through
          case 48: break;
          case 8:
          { return STRINGVAR;
          }
          // fall through
          case 49: break;
          case 9:
          { return LBRACKET;
          }
          // fall through
          case 50: break;
          case 10:
          { return RBRACKET;
          }
          // fall through
          case 51: break;
          case 11:
          { return AT;
          }
          // fall through
          case 52: break;
          case 12:
          { return COMMA;
          }
          // fall through
          case 53: break;
          case 13:
          { return COMPARATORS;
          }
          // fall through
          case 54: break;
          case 14:
          { return EQ;
          }
          // fall through
          case 55: break;
          case 15:
          { return COLON;
          }
          // fall through
          case 56: break;
          case 16:
          { return SEMICOLON;
          }
          // fall through
          case 57: break;
          case 17:
          { return SWITCH;
          }
          // fall through
          case 58: break;
          case 18:
          { return COMMENT;
          }
          // fall through
          case 59: break;
          case 19:
          { return STRING;
          }
          // fall through
          case 60: break;
          case 20:
          { return KEYWORDS;
          }
          // fall through
          case 61: break;
          case 21:
          { return PRIMITIVETYPE;
          }
          // fall through
          case 62: break;
          case 22:
          { return UEQ;
          }
          // fall through
          case 63: break;
          case 23:
          { return JAVATYPEHEAD;
          }
          // fall through
          case 64: break;
          case 24:
          { return BOOLS;
          }
          // fall through
          case 65: break;
          case 25:
          { return PLUS;
          }
          // fall through
          case 66: break;
          case 26:
          { return VOID;
          }
          // fall through
          case 67: break;
          case 27:
          { return THIS;
          }
          // fall through
          case 68: break;
          case 28:
          { return MODIFIER;
          }
          // fall through
          case 69: break;
          case 29:
          { return MINUS;
          }
          // fall through
          case 70: break;
          case 30:
          { return THROW;
          }
          // fall through
          case 71: break;
          case 31:
          { return THROWS;
          }
          // fall through
          case 72: break;
          case 32:
          { return FIELDS;
          }
          // fall through
          case 73: break;
          case 33:
          { return EXTENDS;
          }
          // fall through
          case 74: break;
          case 34:
          { return L_ARROW;
          }
          // fall through
          case 75: break;
          case 35:
          { return METHODS;
          }
          // fall through
          case 76: break;
          case 36:
          { return R_ARROW;
          }
          // fall through
          case 77: break;
          case 37:
          { return LVLINDEX;
          }
          // fall through
          case 78: break;
          case 38:
          { return IMPLEMENTS;
          }
          // fall through
          case 79: break;
          case 39:
          { return ATTRIBUTES;
          }
          // fall through
          case 80: break;
          case 40:
          { return CONSTMETHODNAMES;
          }
          // fall through
          case 81: break;
          case 41:
          { return INSTRUCTIONHEAD;
          }
          // fall through
          case 82: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
