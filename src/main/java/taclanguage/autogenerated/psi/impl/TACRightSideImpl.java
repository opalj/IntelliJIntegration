// This is a generated file. Not intended for manual editing.
package taclanguage.autogenerated.psi.impl;

import static taclanguage.autogenerated.psi.TAC_elementTypeHolder.*;

import com.intellij.extapi.psi.ASTWrapperPsiElement;
import com.intellij.lang.ASTNode;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiElementVisitor;
import org.jetbrains.annotations.*;
import taclanguage.autogenerated.psi.*;

public class TACRightSideImpl extends ASTWrapperPsiElement implements TACRightSide {

  public TACRightSideImpl(@NotNull ASTNode node) {
    super(node);
  }

  public void accept(@NotNull TACVisitor visitor) {
    visitor.visitRightSide(this);
  }

  public void accept(@NotNull PsiElementVisitor visitor) {
    if (visitor instanceof TACVisitor) accept((TACVisitor) visitor);
    else super.accept(visitor);
  }

  @Override
  @Nullable
  public TACCastIntr getCastIntr() {
    return findChildByClass(TACCastIntr.class);
  }

  @Override
  @Nullable
  public TACLevels getLevels() {
    return findChildByClass(TACLevels.class);
  }

  @Override
  @Nullable
  public TACMethodCallOrNEWInstr getMethodCallOrNEWInstr() {
    return findChildByClass(TACMethodCallOrNEWInstr.class);
  }

  @Override
  @Nullable
  public PsiElement getNumber() {
    return findChildByType(NUMBER);
  }

  @Override
  @Nullable
  public PsiElement getString() {
    return findChildByType(STRING);
  }
}
